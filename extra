https://code.visualstudio.com/download
https://nodejs.org/en/
https://github.com/ > signup
https://github.com/Aakashdeveloper
https://git-scm.com/downloads

Add To Chrome
https://chrome.google.com/webstore/detail/json-viewer/gbmdgpbipfallnflgajpaliibnhdgobh


//after installing Vs code add extension
> eslint
> gitlens
> git History
> vscode icons
> tabnine

Npm
React = 3
Mock API
json-server
Github
Deployment
-> MERN
-> heroku
-> Aws
-> Docker
-> Nginx
React-JWT(Login Logout)-2
React_hooks -1
React-GraphQL-1
HOC
Basic React Native=1
React-Redux =1
React-Redux =1
///////Walkthrough///////
React-Saga -1
React-with-typescript-1
Testing Jest Enzime
--------NOT Backend--------------
API
GraphQL
Login/Logout


/////////////////////////
React
> React is a frontend lib/framework
which help to build single page application
using the component base structure

Npm()
> Node Package Manager
# provide packages
(node_modules/packages/dependencies/)

JSON
> JavaScript Object Notation
[
    {
        "id":1,
        "name":"John"
    },
    {
        "id":2,
        "name":"Ankit"
    }
]

//////////
package.json
//////////
> First is the first file in the app
> Entry point to the application
> Contains cmd start, build, test
> All the packages 

/////////
Step to create package.json
/////////
*NodeJs must be installed in system
> go inside the folder using cmd/terminal (cd desktop/api/react/learnpackage)
> npm init
> Answer all questions
> type "yes"


//////////////////
Step to install package
//////////////////
*NodeJs must be installed in system
> go inside the folder using cmd/terminal (cd desktop/api/react/learnpackage)
> npm i packagename   / npm install packagename
(npm i react)

> npm i react-router-dom@5.3.0


//////////
# package.json > main file and Contains all main dependencies
# package-lock.json > conatines dependency tree
(all the child dependencies)
# .gitignore > help not to push files to github
# readme.md > Detail Description
# src > containe all the scripts(Js/logic)
# public > all static(css/html)


////uninstall package
> npm uninstall packagenam

/////////
setup the generate react app
////////
#window
>One Time Step<
> open the cmd as administrator
> npm i -g create-react-app
> close cmd

>Next Every Time You need to generate new app<
> open cmd 
> go inside the folder where you want application
> create-react-app applicationName

#mac/linux
>One Time Step<
> open the terminal
> sudo npm i -g create-react-app
> close terminal

>Next Every Time You need to generate new app<
> open terminal 
> go inside the folder where you want application
> create-react-app applicationName


//////////////////
> open cmd
> go inside the folder where you want application
> npx create-react-app applicationName

//Step to run the react app//
> open the cmd/terminals
> go inside the folder
> npm start 
> http://localhost:3000


///var let const

////////////////////////////
es5 > ecma Script 5
function add(a,b){
    return a+b
}

es6 > ecma Script 6
const add = (a,b) => {return a+b}

"react": this is the main package of app
"react-dom": this will help to bind the content in html
"react-scripts": this help to run the app


function add(a,b){
    var out = [a,b]
    return out
}

add(1,2)
[1,2]

////////
functional
> Dump components
> Mainly use for display purpose 
> we cannot maintain the state

class
> logical component
> we can use for api calling, display as well as logic
> we can maintain state


hooks


/////////////////////////
props
> props is use to transfer data from one component to another
> we cannot update the value of props(immutable)
> Props can only be used in nested components

state
> It act like a local variable
> Every component can have its own state
> Scope of one state is in that component only
> we can update the value of state(mutable)
> whenever state update component will re-render

/// javascript
map
filter
indexof
Bootstrap> https://www.w3schools.com/bootstrap/default.asp

var city = ["Delhi","Mumbai","Pune"];

for(i=0;i<city.length;i++){
    console.log(city[i])
}

city.map((data) => {console.log(data)})

var a = [0,1,2,3]
a.filter((data) => {return data*2})
[1,2,3]

var a = [3,5,7,8,4,9,10,1]
a.filter((data) => {return data>5})
(4) [7, 8, 9, 10]
var a = [0,1,2,3]
a.filter((data) => {return data*2})
(3) [1, 2, 3]
var city = ["Delhi","Mumbai","Pune","London"];
undefined
city.indexOf('Delhi')
0
city.indexOf('Pune')
2
city.indexOf('Amsterdam')
-1


//////////
parent to child => props
child to parent => props with function


function add(a,b){
    return a + b
}

add(1,2)> from where i to pass value

in the a parent >>>> Define function
in the child >>>> call function

npm i react-router-dom@5.3.0

params (/)
> its complousry to define
queryparams (?)
> no need to define

//////////
default props
//////

history > redirect 
location > for query params
match> for params

(get) hotels>         https://developerfunnel.herokuapp.com/hotels
(get) hotelwrtcity >  https://developerfunnel.herokuapp.com/hotels?city=6
(get) hoteldetails >  https://developerfunnel.herokuapp.com/hotelsdetails/1
(get) onbasisoftrip > https://developerfunnel.herokuapp.com/hotellist/1

(get) roomfilter >    https://developerfunnel.herokuapp.com/hotellist/4?roomtype=1

(get) costfilter >    https://developerfunnel.herokuapp.com/hotellist/1?hcost=1000&lcost=500

(get) cityname >      https://developerfunnel.herokuapp.com/location
(get) rooms >         https://developerfunnel.herokuapp.com/rooms
(get) quickSearch>    https://developerfunnel.herokuapp.com/booking
(get) bookingdetails> https://developerfunnel.herokuapp.com/allBooking
(post)placebooking > 

https://github.com/remix-run/react-router/blob/main/docs/getting-started/tutorial.md



///es5
var a = 10
var b = "my age is "+a
"my age is 10"

//es6
var a = 10
var b = `my age is ${a}`
"my age is 10"

//// dummy api ////
json-server

npx json-server --watch booking.json --port 7111

HOC>
High Order Component
> it is kind of component that return another Component

>https://www.codingame.com/playgrounds/8595/reactjs-higher-order-components-tutorial

spread operator
itertate over array


///deployment///
> npm run build
> push code to Github
> deploy using heroku (https://dashboard.heroku.com/)

//step to push code in git////
//first//
git init
git add .
git commit -m "first commit"
git remote add origin https://github.com/Aakashdeveloper/edunov.git
git push -u origin master

///any next time you want to push code////
git add .
git commit -m "first commit"
git push

//// Aws Deployment ////
code Pipeline
elastic Bean Stalk

https://github.com/Aakashdeveloper/edunov


https://www.youtube.com/c/DeveloperFunnel/videos

/////////
Redux
> structure
> state management

Action > All Api call happen in action
Reducer > Geather the updated state
Store > Save the save(data)
View > Display Part